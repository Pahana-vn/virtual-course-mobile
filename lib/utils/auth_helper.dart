import 'dart:convert';
import 'package:flutter_secure_storage/flutter_secure_storage.dart';

class AuthHelper {
  static final FlutterSecureStorage _storage = FlutterSecureStorage();

  /// Ki·ªÉm tra quy·ªÅn ROLE_STUDENT t·ª´ token
  static Future<bool> checkUserRole() async {
    final String? roleData = await _storage.read(key: "role");

    if (roleData != null) {
      print("üîç RoleData t·ª´ SecureStorage: $roleData");

      try {
        // Ki·ªÉm tra xem roleData c√≥ ph·∫£i danh s√°ch JSON kh√¥ng
        List<dynamic> parsedRoles;
        if (roleData.startsWith('[') && roleData.endsWith(']')) {
          parsedRoles = jsonDecode(roleData); // Gi·∫£i m√£ JSON t·ª´ String
        } else {
          parsedRoles = [roleData]; // N·∫øu roleData ch·ªâ l√† m·ªôt chu·ªói, chuy·ªÉn th√†nh danh s√°ch
        }

        // Duy·ªát danh s√°ch roles ƒë·ªÉ l·∫•y gi√° tr·ªã authority (n·∫øu c√≥)
        List<String> roleList = parsedRoles.map((role) {
          if (role is Map<String, dynamic>) {
            return role["authority"].toString();
          } else if (role is String) {
            return role; // Tr∆∞·ªùng h·ª£p ch·ªâ l√† m·ªôt chu·ªói nh∆∞ "ROLE_STUDENT"
          }
          return "";
        }).toList();

        print("üîç Danh s√°ch roles sau decode: $roleList");

        if (roleList.contains("ROLE_STUDENT")) {
          print("‚úÖ User c√≥ quy·ªÅn ROLE_STUDENT");
          return true;
        }
      } catch (e) {
        print("‚ùå L·ªói khi parse roleData: $e");
      }
    }

    print("üö´ User kh√¥ng c√≥ quy·ªÅn ROLE_STUDENT");
    return false;
  }
}
